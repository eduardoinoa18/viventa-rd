rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isElevated());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || isElevated());
      allow delete: if isMasterAdmin();
    }

    match /audit_logs/{logId} {
      allow create: if isElevated();
      allow read: if isElevated();
      allow update, delete: if false;
    }

    match /listings/{listingId} {
      allow read: if true;
      allow create: if isAgentOrAbove();
      allow update: if isOwnerOrAdmin();
      allow delete: if isOwnerOrAdmin();
    }

    match /invites/{inviteId} {
      allow read: if isElevated();
      allow create: if isElevated();
      allow update: if isElevated();
      allow delete: if isElevated();
    }

    match /applications/{appId} {
      allow read: if isElevated();
      allow create: if true; // public form
      allow update: if isElevated();
      allow delete: if isMasterAdmin();
    }

    match /brokerages/{bId} {
      allow read: if true;
      allow create, update, delete: if isElevated();
    }

    match /counters/{doc} {
      allow read: if isElevated();
      allow write: if isElevated();
    }

    match /{document=**} {
      allow read: if true;
    }

    function roleOf(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
    function isAdmin() { return request.auth != null && roleOf(request.auth.uid) == 'admin'; }
    function isBrokerAdmin() { return request.auth != null && roleOf(request.auth.uid) == 'broker_admin'; }
    function isMasterAdmin() { return request.auth != null && roleOf(request.auth.uid) == 'master_admin'; }
    function isElevated() { return isAdmin() || isBrokerAdmin() || isMasterAdmin(); }
    function isAgentOrAbove() { return request.auth != null && (roleOf(request.auth.uid) in ['agent','admin','broker_admin','master_admin']); }
    function isOwnerOrAdmin() { return request.auth != null && (resource.data.createdBy == request.auth.uid || isAdmin() || isBrokerAdmin() || isMasterAdmin()); }
  }
}
