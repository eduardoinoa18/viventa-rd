rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    match /listings/{listingId} {
      allow read: if true;
      allow create: if isAgentOrAdmin();
      allow update: if isOwnerOrAdmin();
      allow delete: if isOwnerOrAdmin();
    }

    match /{document=**} {
      allow read: if true;
    }

    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isAgentOrAdmin() {
      return request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['agent','admin']
      );
    }
    function isOwnerOrAdmin() {
      return request.auth != null && (
        resource.data.createdBy == request.auth.uid || isAdmin()
      );
    }
  }
}
